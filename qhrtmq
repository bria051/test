TYPE(형)

Int -> 정수
Float -> 소수
Str -> 문자
list,class,function,tuple,dictionary etc

형변환

string -> int
string -> float
float -> int

ex) int(input()), str -> int
ex) float(input()), str -> float

조건문
if,elif,else

반복문

for,while 문

차이점 -> for 문은 범위가 정해져 있을때
    while은 범위가 고정되지 않았을때 쓴다

break
countinus

리스트

Data를 저장하는 공간

a = []

.append()

값을 삭제

del a[3]

(리스트는 0부터 시작한다.)

tuple

a = (1,2,3)

접근할때

a[0]

different

tuple value is not change

dictionary

a = {"sung":"hi"}

key,value

a["name"]
->hi

a = {"sung":"hi","name":"sungsik"}

a["name"]
->


변수[Variable]

공간 -> 객체를 담고 있는 공간
        object를 import 하는 공간

=,==

대입,같다

function 함수

코드들의 모임, why ??????? 중복을 방지, 추상화 abstract

class 클래스

함수와 변수들의 모임

class , object 랑은 다르다

클래스는 붕어빵틀

object는 붕어빵

자료구조

stack (스택)

FIFO(First In Last Out)

In -> 3,4,5
Out -> 5,4,3

[5]
[4]
[3]
---

Queue(큐)

FIFO(First In First Out)

In -> 3,4,5
Out -> 5,4,3

------
3 4 5
------

Tree(트리)

Node(노드) 랑 edge(엣지) 랑 연결되어 있다

Tree 는 Cycle 구조가 안생긴다

그래프(Graph)

Node(노드) 랑 edge 랑 연결이 되어있고 순환구조가 있는 자료구조

알고리즘

이진탐색

반씩 잘라서 값을 찾는 과정

Greedy 알고리즘(그리드 알고리즘 == 욕심 알고리즘)

현재 입장에서 최대한 이익을 취하는 구조 ex)동전 바꿔주기

장점:빨라서 좋다.

Bps,Dps

Bps(Breadth First Search)
넓이 우선 탐색
Dps(Depth First Search)
색깊이 우선 탐색

(미로찾기 해봄)

정렬

거품렬 정렬 bubble sort

삽입 정렬 insert sort

선택 정렬 selective sort

퀵 정렬 quick sort

병합 정렬 merge sort

재귀함수

자기 자신을 호출하는 함수

def fun():
    fun():

허프만 알고리즘것

가장 많은 것을 가장 작은 수로 표현 하는것

(딥러닝 하고있음)

파일 입출력

파일로 부터 텍스트나 숫자를 읽어오는것
From file read text or number

경로

절대경로

/부터 시작이 된다.

상대경로

현재 위치에서부터 파일이 시작이 된다.

./.../ 점은 현재위치,점점은 현재위치로부터 한칸 위에서부터 시작을 한다.







































































































































